#ifndef WEIGHTS_H_
#define WEIGHTS_H_
#include "util.hpp"

const Score pawnScore = S(100, 100);
const Score knightScore = S(315, 33);
const Score bishopScore = S(296, 211);
const Score rookScore = S(264, 396);
const Score queenScore = S(897, 1074);

const Score taperedPawnPcSq[SQUARE_CT] = {
      S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),
      S(0, 0),     S(0, 0),     S(0, 0),    S(185, 153), S(172, 149),
      S(153, 168), S(195, 115), S(99, 144), S(108, 155), S(7, 196),
      S(31, 190),  S(-87, 86),  S(-79, 64), S(-49, 32),  S(-45, -3),
      S(-30, 2),   S(-38, 28),  S(-69, 59), S(-24, 41),  S(-74, 46),
      S(-76, 29),  S(-56, 20),  S(-58, 1),  S(-51, 8),   S(-49, 12),
      S(-73, 28),  S(-54, 24),  S(-54, 16), S(-60, 26),  S(-48, 6),
      S(-33, -6),  S(-44, 1),   S(-41, 12), S(-56, 14),  S(-58, 8),
      S(-47, 11),  S(-66, 16),  S(-57, 11), S(-52, 9),   S(-39, 17),
      S(-50, 22),  S(-38, 4),   S(-46, 6),  S(-55, 18),  S(-60, 23),
      S(-56, 13),  S(-33, 3),   S(-54, 39), S(-32, 18),  S(-23, 0),
      S(-50, 8),   S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),
      S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),
};
const Score taperedKnightPcSq[SQUARE_CT] = {
      S(-135, 59),  S(-112, 10),  S(-155, 91), S(-216, 111), S(-159, 142),
      S(-201, 133), S(-169, 56),  S(-72, -17), S(-24, 90),   S(-26, 119),
      S(18, 113),   S(-106, 134), S(45, 117),  S(41, 118),   S(22, 91),
      S(55, 59),    S(-10, 112),  S(38, 118),  S(2, 167),    S(51, 171),
      S(-50, 178),  S(94, 161),   S(3, 139),   S(9, 106),    S(-17, 131),
      S(20, 132),   S(37, 155),   S(42, 162),  S(25, 161),   S(36, 162),
      S(18, 141),   S(42, 100),   S(1, 113),   S(-16, 138),  S(26, 146),
      S(19, 162),   S(7, 171),    S(-2, 160),  S(-8, 149),   S(12, 102),
      S(-4, 91),    S(4, 110),    S(15, 126),  S(6, 132),    S(11, 150),
      S(21, 115),   S(-5, 139),   S(-16, 117), S(-48, 131),  S(-27, 99),
      S(1, 89),     S(12, 106),   S(-3, 127),  S(2, 115),    S(29, 61),
      S(-9, 114),   S(-72, -18),  S(12, 64),   S(-9, 54),    S(-5, 122),
      S(-4, 74),    S(1, 84),     S(13, 131),  S(14, 39),
};
const Score taperedBishopPcSq[SQUARE_CT] = {
      S(1, 105),   S(-63, 90), S(-79, 91),  S(-129, 109), S(-108, 79),
      S(-102, 41), S(145, 87), S(186, -19), S(97, 83),    S(111, 85),
      S(86, 89),   S(67, 87),  S(62, 97),   S(144, 70),   S(76, 103),
      S(132, 49),  S(109, 80), S(148, 74),  S(101, 95),   S(161, 75),
      S(100, 86),  S(21, 106), S(131, 106), S(151, 77),   S(95, 78),
      S(129, 76),  S(135, 91), S(152, 85),  S(155, 94),   S(138, 98),
      S(122, 96),  S(99, 96),  S(128, 79),  S(122, 79),   S(120, 89),
      S(147, 93),  S(130, 94), S(117, 90),  S(114, 60),   S(117, 79),
      S(131, 77),  S(116, 63), S(139, 78),  S(140, 73),   S(138, 93),
      S(137, 80),  S(128, 80), S(148, 39),  S(124, 70),   S(127, 61),
      S(127, 63),  S(116, 85), S(134, 67),  S(131, 62),   S(141, 60),
      S(109, 11),  S(99, 15),  S(130, 57),  S(121, 61),   S(108, 70),
      S(126, 64),  S(117, 65), S(191, -8),  S(128, 19),
};
const Score taperedRookPcSq[SQUARE_CT] = {
      S(-186, 90), S(-220, 111), S(-271, 122), S(-224, 120), S(-115, 80),
      S(-96, 80),  S(-16, 59),   S(-128, 90),  S(-115, 70),  S(-114, 75),
      S(-87, 70),  S(-70, 76),   S(-64, 73),   S(-72, 56),   S(-127, 82),
      S(-73, 60),  S(-127, 71),  S(-79, 58),   S(-97, 76),   S(-81, 71),
      S(-44, 52),  S(-21, 62),   S(14, 31),    S(-68, 61),   S(-133, 80),
      S(-109, 71), S(-114, 85),  S(-123, 91),  S(-77, 53),   S(-100, 58),
      S(-56, 48),  S(-92, 49),   S(-121, 31),  S(-139, 68),  S(-129, 82),
      S(-106, 48), S(-133, 56),  S(-141, 67),  S(-123, 64),  S(-153, 76),
      S(-133, 49), S(-134, 65),  S(-122, 39),  S(-143, 37),  S(-141, 65),
      S(-145, 62), S(-117, 43),  S(-140, 28),  S(-165, 41),  S(-129, 17),
      S(-123, 40), S(-135, 56),  S(-105, 16),  S(-114, 26),  S(-124, 63),
      S(-159, 30), S(-124, 40),  S(-124, 34),  S(-110, 39),  S(-111, 53),
      S(-108, 35), S(-116, 39),  S(-120, 29),  S(-130, 35),
};
const Score taperedQueenPcSq[SQUARE_CT] = {
      S(-198, -32),  S(-140, -24), S(-157, 22),  S(-156, 37),   S(-185, 66),
      S(-121, 57),   S(-151, 55),  S(-90, 17),   S(-225, 84),   S(-220, 49),
      S(-181, 82),   S(-190, 76),  S(-201, 113), S(-150, 51),   S(-161, 65),
      S(-131, 51),   S(-178, 11),  S(-191, 71),  S(-182, 45),   S(-181, 73),
      S(-180, 68),   S(-141, 101), S(-162, 61),  S(-194, 81),   S(-191, 21),
      S(-198, 54),   S(-178, 31),  S(-173, 62),  S(-184, 90),   S(-208, 89),
      S(-181, 75),   S(-195, 58),  S(-200, -2),  S(-184, 5),    S(-187, 72),
      S(-176, 61),   S(-196, 70),  S(-230, 99),  S(-213, 77),   S(-189, 54),
      S(-195, 1),    S(-181, 40),  S(-184, 13),  S(-194, 18),   S(-189, 72),
      S(-175, 18),   S(-188, 39),  S(-204, 35),  S(-208, 8),    S(-199, -13),
      S(-194, 19),   S(-166, -17), S(-176, 9),   S(-139, -76),  S(-167, -154),
      S(-148, -148), S(-197, -13), S(-175, -52), S(-177, -60),  S(-165, -29),
      S(-178, -55),  S(-230, -17), S(-164, -90), S(-143, -123),
};
const Score taperedKingPcSq[SQUARE_CT] = {
      S(-209, -138), S(-273, -155), S(-60, -111),  S(-241, -129), S(-128, -93),
      S(-107, -86),  S(-108, -104), S(-15, -206),  S(-289, -94),  S(-208, -68),
      S(-169, -67),  S(-115, -84),  S(-36, -78),   S(-124, -62),  S(-145, -60),
      S(-73, -109),  S(-295, -79),  S(-174, -79),  S(-105, -77),  S(-161, -66),
      S(-171, -59),  S(-40, -77),   S(-92, -69),   S(-18, -114),  S(-143, -116),
      S(-217, -71),  S(-188, -74),  S(-225, -61),  S(-230, -53),  S(-131, -66),
      S(-259, -55),  S(-288, -104), S(-224, -108), S(-220, -102), S(-164, -86),
      S(-179, -77),  S(-220, -69),  S(-181, -77),  S(-206, -94),  S(-267, -93),
      S(-183, -156), S(-160, -126), S(-176, -109), S(-182, -93),  S(-120, -93),
      S(-121, -109), S(-116, -116), S(-197, -129), S(-154, -151), S(-130, -133),
      S(-168, -107), S(-183, -107), S(-186, -106), S(-148, -120), S(-122, -124),
      S(-138, -142), S(-177, -181), S(-128, -151), S(-148, -127), S(-246, -122),
      S(-162, -149), S(-222, -106), S(-122, -152), S(-134, -194),
};
const Score passedPawnRankBonus[8] = {
      S(0, 0),   S(-4, 4),   S(0, 13),    S(-9, 33),
      S(11, 62), S(31, 125), S(-155, 58), S(0, 0),
};
const Score doubledPawnRankBonus[8] = {
      S(0, 0),   S(-10, -17),  S(3, -33), S(-12, -29),
      S(7, -91), S(158, -142), S(0, 0),   S(0, 0),
};
const Score isolatedPawnRankBonus[8] = {
      S(0, 0),    S(-5, -11), S(-20, -11), S(-14, -4),
      S(12, -26), S(28, -47), S(27, -9),   S(0, 0),
};
const Score backwardPawnRankBonus[8] = {
      S(0, 0),   S(-17, -8), S(-2, -4), S(-8, -4),
      S(-4, -5), S(0, 0),    S(0, 0),   S(0, 0),
};
const Score KnightMobilityScore[9] = {
      S(-167, 75),  S(-159, 174), S(-140, 193), S(-136, 196), S(-132, 204),
      S(-123, 209), S(-121, 204), S(-124, 203), S(-115, 182),
};
const Score BishopMobilityScore[14] = {
      S(-211, 53),  S(-213, 83),  S(-200, 77),  S(-192, 83),  S(-193, 96),
      S(-190, 100), S(-184, 108), S(-189, 114), S(-185, 106), S(-180, 110),
      S(-200, 106), S(-188, 84),  S(-163, 74),  S(-132, 97),
};
const Score RookMobilityScore[15] = {
      S(101, 108), S(117, 127), S(118, 153), S(121, 157), S(126, 166),
      S(130, 170), S(134, 176), S(144, 174), S(138, 185), S(150, 183),
      S(156, 188), S(163, 190), S(166, 188), S(186, 172), S(146, 211),
};
const Score QueenMobilityScore[28] = {
      S(-211, -19), S(-203, -80), S(-221, 93),  S(-203, 80),  S(-205, 116),
      S(-197, 83),  S(-187, 74),  S(-190, 100), S(-187, 104), S(-184, 103),
      S(-187, 121), S(-170, 102), S(-182, 109), S(-180, 126), S(-177, 112),
      S(-167, 118), S(-179, 122), S(-183, 126), S(-158, 115), S(-155, 96),
      S(-99, 79),   S(-124, 77),  S(-121, 66),  S(-84, 61),   S(-49, 11),
      S(113, -29),  S(-134, 55),  S(160, -4),
};
const Score pawnShieldScores[4] = {
      S(-42, -10),
      S(9, -20),
      S(33, -29),
      S(-165, 41),
};
const Score KingAttackerCountScore[16] = {
      S(54, -47),  S(57, -25),  S(50, -23),   S(46, -27),
      S(29, -23),  S(0, -11),   S(-62, 5),    S(-94, 10),
      S(-161, 28), S(-215, 28), S(-236, 39),  S(-271, 57),
      S(-277, 45), S(-273, -2), S(-271, -23), S(-297, -8),
};
struct EvalWeights {
    const Score pawnScore = S(100, 100);
    const Score knightScore = S(315, 33);
    const Score bishopScore = S(296, 211);
    const Score rookScore = S(264, 396);
    const Score queenScore = S(897, 1074);

    const Score taperedPawnPcSq[SQUARE_CT] = {
          S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),
          S(0, 0),     S(0, 0),     S(0, 0),    S(185, 153), S(172, 149),
          S(153, 168), S(195, 115), S(99, 144), S(108, 155), S(7, 196),
          S(31, 190),  S(-87, 86),  S(-79, 64), S(-49, 32),  S(-45, -3),
          S(-30, 2),   S(-38, 28),  S(-69, 59), S(-24, 41),  S(-74, 46),
          S(-76, 29),  S(-56, 20),  S(-58, 1),  S(-51, 8),   S(-49, 12),
          S(-73, 28),  S(-54, 24),  S(-54, 16), S(-60, 26),  S(-48, 6),
          S(-33, -6),  S(-44, 1),   S(-41, 12), S(-56, 14),  S(-58, 8),
          S(-47, 11),  S(-66, 16),  S(-57, 11), S(-52, 9),   S(-39, 17),
          S(-50, 22),  S(-38, 4),   S(-46, 6),  S(-55, 18),  S(-60, 23),
          S(-56, 13),  S(-33, 3),   S(-54, 39), S(-32, 18),  S(-23, 0),
          S(-50, 8),   S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),
          S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),
    };
    const Score taperedKnightPcSq[SQUARE_CT] = {
          S(-135, 59),  S(-112, 10),  S(-155, 91), S(-216, 111), S(-159, 142),
          S(-201, 133), S(-169, 56),  S(-72, -17), S(-24, 90),   S(-26, 119),
          S(18, 113),   S(-106, 134), S(45, 117),  S(41, 118),   S(22, 91),
          S(55, 59),    S(-10, 112),  S(38, 118),  S(2, 167),    S(51, 171),
          S(-50, 178),  S(94, 161),   S(3, 139),   S(9, 106),    S(-17, 131),
          S(20, 132),   S(37, 155),   S(42, 162),  S(25, 161),   S(36, 162),
          S(18, 141),   S(42, 100),   S(1, 113),   S(-16, 138),  S(26, 146),
          S(19, 162),   S(7, 171),    S(-2, 160),  S(-8, 149),   S(12, 102),
          S(-4, 91),    S(4, 110),    S(15, 126),  S(6, 132),    S(11, 150),
          S(21, 115),   S(-5, 139),   S(-16, 117), S(-48, 131),  S(-27, 99),
          S(1, 89),     S(12, 106),   S(-3, 127),  S(2, 115),    S(29, 61),
          S(-9, 114),   S(-72, -18),  S(12, 64),   S(-9, 54),    S(-5, 122),
          S(-4, 74),    S(1, 84),     S(13, 131),  S(14, 39),
    };
    const Score taperedBishopPcSq[SQUARE_CT] = {
          S(1, 105),   S(-63, 90), S(-79, 91),  S(-129, 109), S(-108, 79),
          S(-102, 41), S(145, 87), S(186, -19), S(97, 83),    S(111, 85),
          S(86, 89),   S(67, 87),  S(62, 97),   S(144, 70),   S(76, 103),
          S(132, 49),  S(109, 80), S(148, 74),  S(101, 95),   S(161, 75),
          S(100, 86),  S(21, 106), S(131, 106), S(151, 77),   S(95, 78),
          S(129, 76),  S(135, 91), S(152, 85),  S(155, 94),   S(138, 98),
          S(122, 96),  S(99, 96),  S(128, 79),  S(122, 79),   S(120, 89),
          S(147, 93),  S(130, 94), S(117, 90),  S(114, 60),   S(117, 79),
          S(131, 77),  S(116, 63), S(139, 78),  S(140, 73),   S(138, 93),
          S(137, 80),  S(128, 80), S(148, 39),  S(124, 70),   S(127, 61),
          S(127, 63),  S(116, 85), S(134, 67),  S(131, 62),   S(141, 60),
          S(109, 11),  S(99, 15),  S(130, 57),  S(121, 61),   S(108, 70),
          S(126, 64),  S(117, 65), S(191, -8),  S(128, 19),
    };
    const Score taperedRookPcSq[SQUARE_CT] = {
          S(-186, 90), S(-220, 111), S(-271, 122), S(-224, 120), S(-115, 80),
          S(-96, 80),  S(-16, 59),   S(-128, 90),  S(-115, 70),  S(-114, 75),
          S(-87, 70),  S(-70, 76),   S(-64, 73),   S(-72, 56),   S(-127, 82),
          S(-73, 60),  S(-127, 71),  S(-79, 58),   S(-97, 76),   S(-81, 71),
          S(-44, 52),  S(-21, 62),   S(14, 31),    S(-68, 61),   S(-133, 80),
          S(-109, 71), S(-114, 85),  S(-123, 91),  S(-77, 53),   S(-100, 58),
          S(-56, 48),  S(-92, 49),   S(-121, 31),  S(-139, 68),  S(-129, 82),
          S(-106, 48), S(-133, 56),  S(-141, 67),  S(-123, 64),  S(-153, 76),
          S(-133, 49), S(-134, 65),  S(-122, 39),  S(-143, 37),  S(-141, 65),
          S(-145, 62), S(-117, 43),  S(-140, 28),  S(-165, 41),  S(-129, 17),
          S(-123, 40), S(-135, 56),  S(-105, 16),  S(-114, 26),  S(-124, 63),
          S(-159, 30), S(-124, 40),  S(-124, 34),  S(-110, 39),  S(-111, 53),
          S(-108, 35), S(-116, 39),  S(-120, 29),  S(-130, 35),
    };
    const Score taperedQueenPcSq[SQUARE_CT] = {
          S(-198, -32), S(-140, -24), S(-157, 22),   S(-156, 37),
          S(-185, 66),  S(-121, 57),  S(-151, 55),   S(-90, 17),
          S(-225, 84),  S(-220, 49),  S(-181, 82),   S(-190, 76),
          S(-201, 113), S(-150, 51),  S(-161, 65),   S(-131, 51),
          S(-178, 11),  S(-191, 71),  S(-182, 45),   S(-181, 73),
          S(-180, 68),  S(-141, 101), S(-162, 61),   S(-194, 81),
          S(-191, 21),  S(-198, 54),  S(-178, 31),   S(-173, 62),
          S(-184, 90),  S(-208, 89),  S(-181, 75),   S(-195, 58),
          S(-200, -2),  S(-184, 5),   S(-187, 72),   S(-176, 61),
          S(-196, 70),  S(-230, 99),  S(-213, 77),   S(-189, 54),
          S(-195, 1),   S(-181, 40),  S(-184, 13),   S(-194, 18),
          S(-189, 72),  S(-175, 18),  S(-188, 39),   S(-204, 35),
          S(-208, 8),   S(-199, -13), S(-194, 19),   S(-166, -17),
          S(-176, 9),   S(-139, -76), S(-167, -154), S(-148, -148),
          S(-197, -13), S(-175, -52), S(-177, -60),  S(-165, -29),
          S(-178, -55), S(-230, -17), S(-164, -90),  S(-143, -123),
    };
    const Score taperedKingPcSq[SQUARE_CT] = {
          S(-209, -138), S(-273, -155), S(-60, -111),  S(-241, -129),
          S(-128, -93),  S(-107, -86),  S(-108, -104), S(-15, -206),
          S(-289, -94),  S(-208, -68),  S(-169, -67),  S(-115, -84),
          S(-36, -78),   S(-124, -62),  S(-145, -60),  S(-73, -109),
          S(-295, -79),  S(-174, -79),  S(-105, -77),  S(-161, -66),
          S(-171, -59),  S(-40, -77),   S(-92, -69),   S(-18, -114),
          S(-143, -116), S(-217, -71),  S(-188, -74),  S(-225, -61),
          S(-230, -53),  S(-131, -66),  S(-259, -55),  S(-288, -104),
          S(-224, -108), S(-220, -102), S(-164, -86),  S(-179, -77),
          S(-220, -69),  S(-181, -77),  S(-206, -94),  S(-267, -93),
          S(-183, -156), S(-160, -126), S(-176, -109), S(-182, -93),
          S(-120, -93),  S(-121, -109), S(-116, -116), S(-197, -129),
          S(-154, -151), S(-130, -133), S(-168, -107), S(-183, -107),
          S(-186, -106), S(-148, -120), S(-122, -124), S(-138, -142),
          S(-177, -181), S(-128, -151), S(-148, -127), S(-246, -122),
          S(-162, -149), S(-222, -106), S(-122, -152), S(-134, -194),
    };
    const Score passedPawnRankBonus[8] = {
          S(0, 0),   S(-4, 4),   S(0, 13),    S(-9, 33),
          S(11, 62), S(31, 125), S(-155, 58), S(0, 0),
    };
    const Score doubledPawnRankBonus[8] = {
          S(0, 0),   S(-10, -17),  S(3, -33), S(-12, -29),
          S(7, -91), S(158, -142), S(0, 0),   S(0, 0),
    };
    const Score isolatedPawnRankBonus[8] = {
          S(0, 0),    S(-5, -11), S(-20, -11), S(-14, -4),
          S(12, -26), S(28, -47), S(27, -9),   S(0, 0),
    };
    const Score backwardPawnRankBonus[8] = {
          S(0, 0),   S(-17, -8), S(-2, -4), S(-8, -4),
          S(-4, -5), S(0, 0),    S(0, 0),   S(0, 0),
    };
    const Score KnightMobilityScore[9] = {
          S(-167, 75),  S(-159, 174), S(-140, 193), S(-136, 196), S(-132, 204),
          S(-123, 209), S(-121, 204), S(-124, 203), S(-115, 182),
    };
    const Score BishopMobilityScore[14] = {
          S(-211, 53),  S(-213, 83),  S(-200, 77),  S(-192, 83),  S(-193, 96),
          S(-190, 100), S(-184, 108), S(-189, 114), S(-185, 106), S(-180, 110),
          S(-200, 106), S(-188, 84),  S(-163, 74),  S(-132, 97),
    };
    const Score RookMobilityScore[15] = {
          S(101, 108), S(117, 127), S(118, 153), S(121, 157), S(126, 166),
          S(130, 170), S(134, 176), S(144, 174), S(138, 185), S(150, 183),
          S(156, 188), S(163, 190), S(166, 188), S(186, 172), S(146, 211),
    };
    const Score QueenMobilityScore[28] = {
          S(-211, -19), S(-203, -80), S(-221, 93),  S(-203, 80),  S(-205, 116),
          S(-197, 83),  S(-187, 74),  S(-190, 100), S(-187, 104), S(-184, 103),
          S(-187, 121), S(-170, 102), S(-182, 109), S(-180, 126), S(-177, 112),
          S(-167, 118), S(-179, 122), S(-183, 126), S(-158, 115), S(-155, 96),
          S(-99, 79),   S(-124, 77),  S(-121, 66),  S(-84, 61),   S(-49, 11),
          S(113, -29),  S(-134, 55),  S(160, -4),
    };
    const Score pawnShieldScores[4] = {
          S(-42, -10),
          S(9, -20),
          S(33, -29),
          S(-165, 41),
    };
    const Score KingAttackerCountScore[16] = {
          S(54, -47),  S(57, -25),  S(50, -23),   S(46, -27),
          S(29, -23),  S(0, -11),   S(-62, 5),    S(-94, 10),
          S(-161, 28), S(-215, 28), S(-236, 39),  S(-271, 57),
          S(-277, 45), S(-273, -2), S(-271, -23), S(-297, -8),
    };
};
#endif // WEIGHTS_H_
